// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components <Subtitle /> should access color props 1`] = `
<StyledComponent
  color="text.shade100"
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwzfXH",
        "isStatic": false,
        "rules": Array [
          "
  ",
          [Function],
          "
  ",
          [Function],
          "
",
        ],
      },
      "displayName": "styled.h2",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bwzfXH",
      "target": "h2",
      "toString": [Function],
      "usesTheme": true,
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`components <Subtitle /> should access typography props 1`] = `
<StyledComponent
  fontSize={2}
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwzfXH",
        "isStatic": false,
        "rules": Array [
          "
  ",
          [Function],
          "
  ",
          [Function],
          "
",
        ],
      },
      "displayName": "styled.h2",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bwzfXH",
      "target": "h2",
      "toString": [Function],
      "usesTheme": true,
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`components <Subtitle /> should render 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwzfXH",
        "isStatic": false,
        "rules": Array [
          "
  ",
          [Function],
          "
  ",
          [Function],
          "
",
        ],
      },
      "displayName": "styled.h2",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bwzfXH",
      "target": "h2",
      "toString": [Function],
      "usesTheme": true,
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`components <Subtitle /> should render correct text 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwzfXH",
        "isStatic": false,
        "rules": Array [
          "
  ",
          [Function],
          "
  ",
          [Function],
          "
",
        ],
      },
      "displayName": "styled.h2",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bwzfXH",
      "target": "h2",
      "toString": [Function],
      "usesTheme": true,
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  Hello World
</StyledComponent>
`;

exports[`components <Title /> should access color props 1`] = `
<StyledComponent
  color="text.shade100"
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "
  font-family: Ailerons, sans-serif;
  ",
          [Function],
          "
  ",
          [Function],
          "
",
        ],
      },
      "displayName": "styled.h1",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "h1",
      "toString": [Function],
      "usesTheme": true,
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`components <Title /> should access typography props 1`] = `
<StyledComponent
  fontSize={2}
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "
  font-family: Ailerons, sans-serif;
  ",
          [Function],
          "
  ",
          [Function],
          "
",
        ],
      },
      "displayName": "styled.h1",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "h1",
      "toString": [Function],
      "usesTheme": true,
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`components <Title /> should render 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "
  font-family: Ailerons, sans-serif;
  ",
          [Function],
          "
  ",
          [Function],
          "
",
        ],
      },
      "displayName": "styled.h1",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "h1",
      "toString": [Function],
      "usesTheme": true,
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`components <Title /> should render correct text 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "
  font-family: Ailerons, sans-serif;
  ",
          [Function],
          "
  ",
          [Function],
          "
",
        ],
      },
      "displayName": "styled.h1",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "h1",
      "toString": [Function],
      "usesTheme": true,
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  Hello World
</StyledComponent>
`;
